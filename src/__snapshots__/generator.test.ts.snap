// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`createConfig > applies stylistic rules 1`] = `
"import { createRequire } from "module";
const require = createRequire(import.meta.url);
export default {
  linterOptions: {
    reportUnusedDisableDirectives: 1,
  },
  rules: {
    "for-direction": "error",
    "no-async-promise-executor": "error",
    "no-case-declarations": "error",
    "no-compare-neg-zero": "error",
    "no-cond-assign": ["error", "except-parens"],
    "no-constant-binary-expression": "error",
    "no-constant-condition": [
      "error",
      {
        checkLoops: "allExceptWhileTrue",
      },
    ],
    "no-control-regex": "error",
    "no-debugger": "error",
    "no-delete-var": "error",
    "no-dupe-else-if": "error",
    "no-duplicate-case": "error",
    "no-empty": [
      "error",
      {
        allowEmptyCatch: false,
      },
    ],
    "no-empty-pattern": [
      "error",
      {
        allowObjectPatternsAsParameters: false,
      },
    ],
    "no-empty-static-block": "error",
    "no-ex-assign": "error",
    "no-extra-boolean-cast": ["error", {}],
    "no-fallthrough": [
      "error",
      {
        allowEmptyCase: false,
        reportUnusedFallthroughComment: false,
      },
    ],
    "no-global-assign": [
      "error",
      {
        exceptions: [],
      },
    ],
    "no-irregular-whitespace": [
      "error",
      {
        skipComments: false,
        skipJSXText: false,
        skipRegExps: false,
        skipStrings: true,
        skipTemplates: false,
      },
    ],
    "no-loss-of-precision": "error",
    "no-misleading-character-class": "error",
    "no-nonoctal-decimal-escape": "error",
    "no-octal": "error",
    "no-prototype-builtins": "error",
    "no-regex-spaces": "error",
    "no-self-assign": [
      "error",
      {
        props: true,
      },
    ],
    "no-shadow-restricted-names": "error",
    "no-sparse-arrays": "error",
    "no-unsafe-finally": "error",
    "no-unsafe-optional-chaining": [
      "error",
      {
        disallowArithmeticOperators: false,
      },
    ],
    "no-unused-labels": "error",
    "no-unused-private-class-members": "error",
    "no-useless-catch": "error",
    "no-useless-escape": "error",
    "no-var": "error",
    "no-with": "error",
    "prefer-const": [
      "error",
      {
        destructuring: "any",
        ignoreReadBeforeAssign: false,
      },
    ],
    "prefer-regex-literals": [
      "error",
      {
        disallowRedundantWrapping: false,
      },
    ],
    "prefer-rest-params": "error",
    "prefer-spread": "error",
    "require-yield": "error",
    "use-isnan": [
      "error",
      {
        enforceForIndexOf: false,
        enforceForSwitchCase: true,
      },
    ],
    "valid-typeof": [
      "error",
      {
        requireStringLiterals: false,
      },
    ],
    "@typescript-eslint/adjacent-overload-signatures": "error",
    "@typescript-eslint/array-type": "error",
    "@typescript-eslint/await-thenable": "error",
    "@typescript-eslint/ban-ts-comment": "error",
    "@typescript-eslint/ban-tslint-comment": "error",
    "@typescript-eslint/class-literal-property-style": "error",
    "@typescript-eslint/consistent-generic-constructors": "error",
    "@typescript-eslint/consistent-indexed-object-style": "error",
    "@typescript-eslint/consistent-type-assertions": "error",
    "@typescript-eslint/consistent-type-definitions": "error",
    "@typescript-eslint/dot-notation": [
      "error",
      {
        allowIndexSignaturePropertyAccess: false,
        allowKeywords: true,
        allowPattern: "",
        allowPrivateClassPropertyAccess: false,
        allowProtectedClassPropertyAccess: false,
      },
    ],
    "@typescript-eslint/no-array-constructor": "error",
    "@typescript-eslint/no-array-delete": "error",
    "@typescript-eslint/no-base-to-string": "error",
    "@typescript-eslint/no-confusing-non-null-assertion": "error",
    "@typescript-eslint/no-duplicate-enum-values": "error",
    "@typescript-eslint/no-duplicate-type-constituents": "error",
    "@typescript-eslint/no-empty-function": [
      "error",
      {
        allow: [],
      },
    ],
    "@typescript-eslint/no-empty-object-type": "error",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-extra-non-null-assertion": "error",
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/no-for-in-array": "error",
    "@typescript-eslint/no-implied-eval": "error",
    "@typescript-eslint/no-inferrable-types": "error",
    "@typescript-eslint/no-misused-new": "error",
    "@typescript-eslint/no-misused-promises": "error",
    "@typescript-eslint/no-namespace": "error",
    "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
    "@typescript-eslint/no-redundant-type-constituents": "error",
    "@typescript-eslint/no-require-imports": "error",
    "@typescript-eslint/no-this-alias": "error",
    "@typescript-eslint/no-unnecessary-type-assertion": "error",
    "@typescript-eslint/no-unnecessary-type-constraint": "error",
    "@typescript-eslint/no-unsafe-argument": "error",
    "@typescript-eslint/no-unsafe-assignment": "error",
    "@typescript-eslint/no-unsafe-call": "error",
    "@typescript-eslint/no-unsafe-declaration-merging": "error",
    "@typescript-eslint/no-unsafe-enum-comparison": "error",
    "@typescript-eslint/no-unsafe-function-type": "error",
    "@typescript-eslint/no-unsafe-member-access": "error",
    "@typescript-eslint/no-unsafe-return": "error",
    "@typescript-eslint/no-unsafe-unary-minus": "error",
    "@typescript-eslint/no-unused-expressions": [
      "error",
      {
        allowShortCircuit: false,
        allowTaggedTemplates: false,
        allowTernary: false,
      },
    ],
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/no-wrapper-object-types": "error",
    "@typescript-eslint/non-nullable-type-assertion-style": "error",
    "@typescript-eslint/only-throw-error": "error",
    "@typescript-eslint/prefer-as-const": "error",
    "@typescript-eslint/prefer-find": "error",
    "@typescript-eslint/prefer-for-of": "error",
    "@typescript-eslint/prefer-function-type": "error",
    "@typescript-eslint/prefer-includes": "error",
    "@typescript-eslint/prefer-namespace-keyword": "error",
    "@typescript-eslint/prefer-nullish-coalescing": "error",
    "@typescript-eslint/prefer-optional-chain": "error",
    "@typescript-eslint/prefer-promise-reject-errors": "error",
    "@typescript-eslint/prefer-regexp-exec": "error",
    "@typescript-eslint/prefer-string-starts-ends-with": "error",
    "@typescript-eslint/require-await": "error",
    "@typescript-eslint/restrict-plus-operands": "error",
    "@typescript-eslint/restrict-template-expressions": "error",
    "@typescript-eslint/triple-slash-reference": "error",
    "@typescript-eslint/unbound-method": "error",
    "jsdoc/check-access": "error",
    "jsdoc/check-alignment": "error",
    "jsdoc/check-param-names": "error",
    "jsdoc/check-property-names": "error",
    "jsdoc/check-tag-names": [
      "error",
      {
        typed: true,
      },
    ],
    "jsdoc/check-types": "error",
    "jsdoc/check-values": "error",
    "jsdoc/empty-tags": "error",
    "jsdoc/implements-on-classes": "error",
    "jsdoc/multiline-blocks": "error",
    "jsdoc/no-defaults": "error",
    "jsdoc/no-multi-asterisks": "error",
    "jsdoc/no-types": "error",
    "jsdoc/require-jsdoc": "error",
    "jsdoc/require-param": "error",
    "jsdoc/require-param-description": "error",
    "jsdoc/require-param-name": "error",
    "jsdoc/require-property": "error",
    "jsdoc/require-property-description": "error",
    "jsdoc/require-property-name": "error",
    "jsdoc/require-returns": "error",
    "jsdoc/require-returns-check": "error",
    "jsdoc/require-returns-description": "error",
    "jsdoc/require-yields": "error",
    "jsdoc/require-yields-check": "error",
    "jsdoc/tag-lines": "error",
    "jsdoc/valid-types": "error",
    "regexp/confusing-quantifier": "warn",
    "regexp/control-character-escape": "error",
    "regexp/match-any": "error",
    "regexp/negation": "error",
    "regexp/no-contradiction-with-assertion": "error",
    "regexp/no-dupe-characters-character-class": "error",
    "regexp/no-dupe-disjunctions": "error",
    "regexp/no-empty-alternative": "warn",
    "regexp/no-empty-capturing-group": "error",
    "regexp/no-empty-character-class": "error",
    "regexp/no-empty-group": "error",
    "regexp/no-empty-lookarounds-assertion": "error",
    "regexp/no-empty-string-literal": "error",
    "regexp/no-escape-backspace": "error",
    "regexp/no-extra-lookaround-assertions": "error",
    "regexp/no-invalid-regexp": "error",
    "regexp/no-invisible-character": "error",
    "regexp/no-lazy-ends": "warn",
    "regexp/no-legacy-features": "error",
    "regexp/no-misleading-capturing-group": "error",
    "regexp/no-misleading-unicode-character": "error",
    "regexp/no-missing-g-flag": "error",
    "regexp/no-non-standard-flag": "error",
    "regexp/no-obscure-range": "error",
    "regexp/no-optional-assertion": "error",
    "regexp/no-potentially-useless-backreference": "warn",
    "regexp/no-super-linear-backtracking": "error",
    "regexp/no-trivially-nested-assertion": "error",
    "regexp/no-trivially-nested-quantifier": "error",
    "regexp/no-unused-capturing-group": "error",
    "regexp/no-useless-assertions": "error",
    "regexp/no-useless-backreference": "error",
    "regexp/no-useless-character-class": "error",
    "regexp/no-useless-dollar-replacements": "error",
    "regexp/no-useless-escape": "error",
    "regexp/no-useless-flag": "warn",
    "regexp/no-useless-lazy": "error",
    "regexp/no-useless-non-capturing-group": "error",
    "regexp/no-useless-quantifier": "error",
    "regexp/no-useless-range": "error",
    "regexp/no-useless-set-operand": "error",
    "regexp/no-useless-string-literal": "error",
    "regexp/no-useless-two-nums-quantifier": "error",
    "regexp/no-zero-quantifier": "error",
    "regexp/optimal-lookaround-quantifier": "warn",
    "regexp/optimal-quantifier-concatenation": "error",
    "regexp/prefer-character-class": "error",
    "regexp/prefer-d": "error",
    "regexp/prefer-plus-quantifier": "error",
    "regexp/prefer-predefined-assertion": "error",
    "regexp/prefer-question-quantifier": "error",
    "regexp/prefer-range": "error",
    "regexp/prefer-set-operation": "error",
    "regexp/prefer-star-quantifier": "error",
    "regexp/prefer-unicode-codepoint-escapes": "error",
    "regexp/prefer-w": "error",
    "regexp/simplify-set-operations": "error",
    "regexp/sort-flags": "error",
    "regexp/strict": "error",
    "regexp/use-ignore-case": "error",
  },
  plugins: {
    "@typescript-eslint": require("@typescript-eslint/eslint-plugin"),
    jsdoc: require("eslint-plugin-jsdoc"),
    regexp: require("eslint-plugin-regexp"),
  },
  language: "@/js",
  languageOptions: {
    sourceType: "module",
    ecmaVersion: 2025,
    parser: require("@typescript-eslint/parser"),
    parserOptions: {
      ecmaVersion: "latest",
      ecmaFeatures: {},
      projectService: true,
    },
  },
};
"
`;

exports[`createConfig > combines all options 1`] = `
"import { createRequire } from "module";
const require = createRequire(import.meta.url);
export default {
  linterOptions: {
    reportUnusedDisableDirectives: 1,
  },
  rules: {
    "for-direction": "error",
    "no-async-promise-executor": "error",
    "no-case-declarations": "error",
    "no-compare-neg-zero": "error",
    "no-cond-assign": ["error", "except-parens"],
    "no-constant-binary-expression": "error",
    "no-constant-condition": [
      "error",
      {
        checkLoops: "allExceptWhileTrue",
      },
    ],
    "no-control-regex": "error",
    "no-debugger": "error",
    "no-delete-var": "error",
    "no-dupe-else-if": "error",
    "no-duplicate-case": "error",
    "no-empty": [
      "error",
      {
        allowEmptyCatch: false,
      },
    ],
    "no-empty-pattern": [
      "error",
      {
        allowObjectPatternsAsParameters: false,
      },
    ],
    "no-empty-static-block": "error",
    "no-ex-assign": "error",
    "no-extra-boolean-cast": ["error", {}],
    "no-fallthrough": [
      "error",
      {
        allowEmptyCase: false,
        reportUnusedFallthroughComment: false,
      },
    ],
    "no-global-assign": [
      "error",
      {
        exceptions: [],
      },
    ],
    "no-irregular-whitespace": [
      "error",
      {
        skipComments: false,
        skipJSXText: false,
        skipRegExps: false,
        skipStrings: true,
        skipTemplates: false,
      },
    ],
    "no-loss-of-precision": "error",
    "no-misleading-character-class": "error",
    "no-nonoctal-decimal-escape": "error",
    "no-octal": "error",
    "no-prototype-builtins": "error",
    "no-regex-spaces": "error",
    "no-self-assign": [
      "error",
      {
        props: true,
      },
    ],
    "no-shadow-restricted-names": "error",
    "no-sparse-arrays": "error",
    "no-unsafe-finally": "error",
    "no-unsafe-optional-chaining": [
      "error",
      {
        disallowArithmeticOperators: false,
      },
    ],
    "no-unused-labels": "error",
    "no-unused-private-class-members": "error",
    "no-useless-catch": "error",
    "no-useless-escape": "error",
    "no-var": "error",
    "no-with": "error",
    "prefer-const": [
      "error",
      {
        destructuring: "any",
        ignoreReadBeforeAssign: false,
      },
    ],
    "prefer-regex-literals": [
      "error",
      {
        disallowRedundantWrapping: false,
      },
    ],
    "prefer-rest-params": "error",
    "prefer-spread": "error",
    "require-yield": "error",
    "use-isnan": [
      "error",
      {
        enforceForIndexOf: false,
        enforceForSwitchCase: true,
      },
    ],
    "valid-typeof": [
      "error",
      {
        requireStringLiterals: false,
      },
    ],
    "@typescript-eslint/adjacent-overload-signatures": "error",
    "@typescript-eslint/array-type": "error",
    "@typescript-eslint/await-thenable": "error",
    "@typescript-eslint/ban-ts-comment": [
      "error",
      {
        minimumDescriptionLength: 10,
      },
    ],
    "@typescript-eslint/ban-tslint-comment": "error",
    "@typescript-eslint/class-literal-property-style": "error",
    "@typescript-eslint/consistent-generic-constructors": "error",
    "@typescript-eslint/consistent-indexed-object-style": "error",
    "@typescript-eslint/consistent-type-assertions": "error",
    "@typescript-eslint/consistent-type-definitions": "error",
    "@typescript-eslint/dot-notation": [
      "error",
      {
        allowIndexSignaturePropertyAccess: false,
        allowKeywords: true,
        allowPattern: "",
        allowPrivateClassPropertyAccess: false,
        allowProtectedClassPropertyAccess: false,
      },
    ],
    "@typescript-eslint/no-array-constructor": "error",
    "@typescript-eslint/no-array-delete": "error",
    "@typescript-eslint/no-base-to-string": "error",
    "@typescript-eslint/no-confusing-non-null-assertion": "error",
    "@typescript-eslint/no-confusing-void-expression": "error",
    "@typescript-eslint/no-deprecated": "error",
    "@typescript-eslint/no-duplicate-enum-values": "error",
    "@typescript-eslint/no-duplicate-type-constituents": "error",
    "@typescript-eslint/no-dynamic-delete": "error",
    "@typescript-eslint/no-empty-function": [
      "error",
      {
        allow: [],
      },
    ],
    "@typescript-eslint/no-empty-object-type": "error",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-extra-non-null-assertion": "error",
    "@typescript-eslint/no-extraneous-class": "error",
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/no-for-in-array": "error",
    "@typescript-eslint/no-implied-eval": "error",
    "@typescript-eslint/no-inferrable-types": "error",
    "@typescript-eslint/no-invalid-void-type": "error",
    "@typescript-eslint/no-meaningless-void-operator": "error",
    "@typescript-eslint/no-misused-new": "error",
    "@typescript-eslint/no-misused-promises": "error",
    "@typescript-eslint/no-misused-spread": "error",
    "@typescript-eslint/no-mixed-enums": "error",
    "@typescript-eslint/no-namespace": "error",
    "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "error",
    "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
    "@typescript-eslint/no-non-null-assertion": "error",
    "@typescript-eslint/no-redundant-type-constituents": "error",
    "@typescript-eslint/no-require-imports": "error",
    "@typescript-eslint/no-this-alias": "error",
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
    "@typescript-eslint/no-unnecessary-condition": "error",
    "@typescript-eslint/no-unnecessary-template-expression": "error",
    "@typescript-eslint/no-unnecessary-type-arguments": "error",
    "@typescript-eslint/no-unnecessary-type-assertion": "error",
    "@typescript-eslint/no-unnecessary-type-constraint": "error",
    "@typescript-eslint/no-unnecessary-type-parameters": "error",
    "@typescript-eslint/no-unsafe-argument": "error",
    "@typescript-eslint/no-unsafe-assignment": "error",
    "@typescript-eslint/no-unsafe-call": "error",
    "@typescript-eslint/no-unsafe-declaration-merging": "error",
    "@typescript-eslint/no-unsafe-enum-comparison": "error",
    "@typescript-eslint/no-unsafe-function-type": "error",
    "@typescript-eslint/no-unsafe-member-access": "error",
    "@typescript-eslint/no-unsafe-return": "error",
    "@typescript-eslint/no-unsafe-unary-minus": "error",
    "@typescript-eslint/no-unused-expressions": [
      "error",
      {
        allowShortCircuit: false,
        allowTaggedTemplates: false,
        allowTernary: false,
      },
    ],
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/no-useless-constructor": "error",
    "@typescript-eslint/no-wrapper-object-types": "error",
    "@typescript-eslint/non-nullable-type-assertion-style": "error",
    "@typescript-eslint/only-throw-error": "error",
    "@typescript-eslint/prefer-as-const": "error",
    "@typescript-eslint/prefer-find": "error",
    "@typescript-eslint/prefer-for-of": "error",
    "@typescript-eslint/prefer-function-type": "error",
    "@typescript-eslint/prefer-includes": "error",
    "@typescript-eslint/prefer-literal-enum-member": "error",
    "@typescript-eslint/prefer-namespace-keyword": "error",
    "@typescript-eslint/prefer-nullish-coalescing": "error",
    "@typescript-eslint/prefer-optional-chain": "error",
    "@typescript-eslint/prefer-promise-reject-errors": "error",
    "@typescript-eslint/prefer-reduce-type-parameter": "error",
    "@typescript-eslint/prefer-regexp-exec": "error",
    "@typescript-eslint/prefer-return-this-type": "error",
    "@typescript-eslint/prefer-string-starts-ends-with": "error",
    "@typescript-eslint/related-getter-setter-pairs": "error",
    "@typescript-eslint/require-await": "error",
    "@typescript-eslint/restrict-plus-operands": [
      "error",
      {
        allowAny: false,
        allowBoolean: false,
        allowNullish: false,
        allowNumberAndString: false,
        allowRegExp: false,
      },
    ],
    "@typescript-eslint/restrict-template-expressions": [
      "error",
      {
        allowAny: false,
        allowBoolean: false,
        allowNever: false,
        allowNullish: false,
        allowNumber: false,
        allowRegExp: false,
      },
    ],
    "@typescript-eslint/return-await": [
      "error",
      "error-handling-correctness-only",
    ],
    "@typescript-eslint/triple-slash-reference": "error",
    "@typescript-eslint/unbound-method": "error",
    "@typescript-eslint/unified-signatures": "error",
    "@typescript-eslint/use-unknown-in-catch-callback-variable": "error",
    "jsdoc/check-access": "error",
    "jsdoc/check-alignment": "error",
    "jsdoc/check-param-names": "error",
    "jsdoc/check-property-names": "error",
    "jsdoc/check-tag-names": [
      "error",
      {
        typed: true,
      },
    ],
    "jsdoc/check-types": "error",
    "jsdoc/check-values": "error",
    "jsdoc/empty-tags": "error",
    "jsdoc/implements-on-classes": "error",
    "jsdoc/multiline-blocks": "error",
    "jsdoc/no-defaults": "error",
    "jsdoc/no-multi-asterisks": "error",
    "jsdoc/no-types": "error",
    "jsdoc/require-jsdoc": "error",
    "jsdoc/require-param": "error",
    "jsdoc/require-param-description": "error",
    "jsdoc/require-param-name": "error",
    "jsdoc/require-property": "error",
    "jsdoc/require-property-description": "error",
    "jsdoc/require-property-name": "error",
    "jsdoc/require-returns": "error",
    "jsdoc/require-returns-check": "error",
    "jsdoc/require-returns-description": "error",
    "jsdoc/require-yields": "error",
    "jsdoc/require-yields-check": "error",
    "jsdoc/tag-lines": "error",
    "jsdoc/valid-types": "error",
    "n/hashbang": "error",
    "n/no-deprecated-api": "error",
    "n/no-exports-assign": "error",
    "n/no-extraneous-import": "error",
    "n/no-extraneous-require": "error",
    "n/no-missing-import": "error",
    "n/no-missing-require": "error",
    "n/no-process-exit": "error",
    "n/no-unpublished-bin": "error",
    "n/no-unpublished-import": "error",
    "n/no-unpublished-require": "error",
    "n/no-unsupported-features/es-builtins": "error",
    "n/no-unsupported-features/es-syntax": [
      "error",
      {
        ignores: ["modules"],
      },
    ],
    "n/no-unsupported-features/node-builtins": "error",
    "n/process-exit-as-throw": "error",
    "react-compiler/react-compiler": "error",
    "react-hooks/exhaustive-deps": "error",
    "react-hooks/rules-of-hooks": "error",
    "react/display-name": "error",
    "react/jsx-key": "error",
    "react/jsx-no-comment-textnodes": "error",
    "react/jsx-no-duplicate-props": "error",
    "react/jsx-no-target-blank": "error",
    "react/jsx-no-undef": "error",
    "react/jsx-uses-vars": "error",
    "react/no-children-prop": "error",
    "react/no-danger-with-children": "error",
    "react/no-deprecated": "error",
    "react/no-direct-mutation-state": "error",
    "react/no-find-dom-node": "error",
    "react/no-is-mounted": "error",
    "react/no-render-return-value": "error",
    "react/no-string-refs": "error",
    "react/no-unescaped-entities": "error",
    "react/no-unknown-property": "error",
    "react/prop-types": "error",
    "react/require-render-return": "error",
    "regexp/confusing-quantifier": "warn",
    "regexp/control-character-escape": "error",
    "regexp/match-any": "error",
    "regexp/negation": "error",
    "regexp/no-contradiction-with-assertion": "error",
    "regexp/no-dupe-characters-character-class": "error",
    "regexp/no-dupe-disjunctions": "error",
    "regexp/no-empty-alternative": "warn",
    "regexp/no-empty-capturing-group": "error",
    "regexp/no-empty-character-class": "error",
    "regexp/no-empty-group": "error",
    "regexp/no-empty-lookarounds-assertion": "error",
    "regexp/no-empty-string-literal": "error",
    "regexp/no-escape-backspace": "error",
    "regexp/no-extra-lookaround-assertions": "error",
    "regexp/no-invalid-regexp": "error",
    "regexp/no-invisible-character": "error",
    "regexp/no-lazy-ends": "warn",
    "regexp/no-legacy-features": "error",
    "regexp/no-misleading-capturing-group": "error",
    "regexp/no-misleading-unicode-character": "error",
    "regexp/no-missing-g-flag": "error",
    "regexp/no-non-standard-flag": "error",
    "regexp/no-obscure-range": "error",
    "regexp/no-optional-assertion": "error",
    "regexp/no-potentially-useless-backreference": "warn",
    "regexp/no-super-linear-backtracking": "error",
    "regexp/no-trivially-nested-assertion": "error",
    "regexp/no-trivially-nested-quantifier": "error",
    "regexp/no-unused-capturing-group": "error",
    "regexp/no-useless-assertions": "error",
    "regexp/no-useless-backreference": "error",
    "regexp/no-useless-character-class": "error",
    "regexp/no-useless-dollar-replacements": "error",
    "regexp/no-useless-escape": "error",
    "regexp/no-useless-flag": "warn",
    "regexp/no-useless-lazy": "error",
    "regexp/no-useless-non-capturing-group": "error",
    "regexp/no-useless-quantifier": "error",
    "regexp/no-useless-range": "error",
    "regexp/no-useless-set-operand": "error",
    "regexp/no-useless-string-literal": "error",
    "regexp/no-useless-two-nums-quantifier": "error",
    "regexp/no-zero-quantifier": "error",
    "regexp/optimal-lookaround-quantifier": "warn",
    "regexp/optimal-quantifier-concatenation": "error",
    "regexp/prefer-character-class": "error",
    "regexp/prefer-d": "error",
    "regexp/prefer-plus-quantifier": "error",
    "regexp/prefer-predefined-assertion": "error",
    "regexp/prefer-question-quantifier": "error",
    "regexp/prefer-range": "error",
    "regexp/prefer-set-operation": "error",
    "regexp/prefer-star-quantifier": "error",
    "regexp/prefer-unicode-codepoint-escapes": "error",
    "regexp/prefer-w": "error",
    "regexp/simplify-set-operations": "error",
    "regexp/sort-flags": "error",
    "regexp/strict": "error",
    "regexp/use-ignore-case": "error",
  },
  plugins: {
    "@typescript-eslint": require("@typescript-eslint/eslint-plugin"),
    react: require("eslint-plugin-react"),
    "react-hooks": require("eslint-plugin-react-hooks"),
    "react-compiler": require("eslint-plugin-react-compiler"),
    jsdoc: require("eslint-plugin-jsdoc"),
    regexp: require("eslint-plugin-regexp"),
    n: require("eslint-plugin-n"),
  },
  language: "@/js",
  languageOptions: {
    sourceType: "module",
    ecmaVersion: 2025,
    parser: require("@typescript-eslint/parser"),
    parserOptions: {
      ecmaFeatures: {
        jsx: true,
      },
      ecmaVersion: "latest",
      projectService: true,
    },
    globals: {
      __dirname: "off",
      __filename: "off",
      AbortController: false,
      AbortSignal: false,
      atob: false,
      Blob: false,
      BroadcastChannel: false,
      btoa: false,
      Buffer: false,
      ByteLengthQueuingStrategy: false,
      clearImmediate: false,
      clearInterval: false,
      clearTimeout: false,
      CloseEvent: false,
      CompressionStream: false,
      console: false,
      CountQueuingStrategy: false,
      crypto: false,
      Crypto: false,
      CryptoKey: false,
      CustomEvent: false,
      DecompressionStream: false,
      DOMException: false,
      Event: false,
      EventTarget: false,
      exports: "off",
      fetch: false,
      File: false,
      FormData: false,
      global: false,
      Headers: false,
      MessageChannel: false,
      MessageEvent: false,
      MessagePort: false,
      module: "off",
      navigator: false,
      Navigator: false,
      performance: false,
      Performance: false,
      PerformanceEntry: false,
      PerformanceMark: false,
      PerformanceMeasure: false,
      PerformanceObserver: false,
      PerformanceObserverEntryList: false,
      PerformanceResourceTiming: false,
      process: false,
      queueMicrotask: false,
      ReadableByteStreamController: false,
      ReadableStream: false,
      ReadableStreamBYOBReader: false,
      ReadableStreamBYOBRequest: false,
      ReadableStreamDefaultController: false,
      ReadableStreamDefaultReader: false,
      Request: false,
      require: "off",
      Response: false,
      setImmediate: false,
      setInterval: false,
      setTimeout: false,
      structuredClone: false,
      SubtleCrypto: false,
      TextDecoder: false,
      TextDecoderStream: false,
      TextEncoder: false,
      TextEncoderStream: false,
      TransformStream: false,
      TransformStreamDefaultController: false,
      URL: false,
      URLSearchParams: false,
      WebAssembly: false,
      WebSocket: false,
      WritableStream: false,
      WritableStreamDefaultController: false,
      WritableStreamDefaultWriter: false,
      AggregateError: false,
      Array: false,
      ArrayBuffer: false,
      Atomics: false,
      BigInt: false,
      BigInt64Array: false,
      BigUint64Array: false,
      Boolean: false,
      DataView: false,
      Date: false,
      decodeURI: false,
      decodeURIComponent: false,
      encodeURI: false,
      encodeURIComponent: false,
      Error: false,
      escape: false,
      eval: false,
      EvalError: false,
      FinalizationRegistry: false,
      Float32Array: false,
      Float64Array: false,
      Function: false,
      globalThis: false,
      Infinity: false,
      Int16Array: false,
      Int32Array: false,
      Int8Array: false,
      Intl: false,
      isFinite: false,
      isNaN: false,
      JSON: false,
      Map: false,
      Math: false,
      NaN: false,
      Number: false,
      Object: false,
      parseFloat: false,
      parseInt: false,
      Promise: false,
      Proxy: false,
      RangeError: false,
      ReferenceError: false,
      Reflect: false,
      RegExp: false,
      Set: false,
      SharedArrayBuffer: false,
      String: false,
      Symbol: false,
      SyntaxError: false,
      TypeError: false,
      Uint16Array: false,
      Uint32Array: false,
      Uint8Array: false,
      Uint8ClampedArray: false,
      undefined: false,
      unescape: false,
      URIError: false,
      WeakMap: false,
      WeakRef: false,
      WeakSet: false,
    },
  },
};
"
`;

exports[`createConfig > disable type-based rules 1`] = `
"import { createRequire } from "module";
const require = createRequire(import.meta.url);
export default {
  linterOptions: {
    reportUnusedDisableDirectives: 1,
  },
  rules: {
    "for-direction": "error",
    "no-async-promise-executor": "error",
    "no-case-declarations": "error",
    "no-compare-neg-zero": "error",
    "no-cond-assign": ["error", "except-parens"],
    "no-constant-binary-expression": "error",
    "no-constant-condition": [
      "error",
      {
        checkLoops: "allExceptWhileTrue",
      },
    ],
    "no-control-regex": "error",
    "no-debugger": "error",
    "no-delete-var": "error",
    "no-dupe-else-if": "error",
    "no-duplicate-case": "error",
    "no-empty": [
      "error",
      {
        allowEmptyCatch: false,
      },
    ],
    "no-empty-pattern": [
      "error",
      {
        allowObjectPatternsAsParameters: false,
      },
    ],
    "no-empty-static-block": "error",
    "no-ex-assign": "error",
    "no-extra-boolean-cast": ["error", {}],
    "no-fallthrough": [
      "error",
      {
        allowEmptyCase: false,
        reportUnusedFallthroughComment: false,
      },
    ],
    "no-global-assign": [
      "error",
      {
        exceptions: [],
      },
    ],
    "no-irregular-whitespace": [
      "error",
      {
        skipComments: false,
        skipJSXText: false,
        skipRegExps: false,
        skipStrings: true,
        skipTemplates: false,
      },
    ],
    "no-loss-of-precision": "error",
    "no-misleading-character-class": "error",
    "no-nonoctal-decimal-escape": "error",
    "no-octal": "error",
    "no-prototype-builtins": "error",
    "no-regex-spaces": "error",
    "no-self-assign": [
      "error",
      {
        props: true,
      },
    ],
    "no-shadow-restricted-names": "error",
    "no-sparse-arrays": "error",
    "no-unsafe-finally": "error",
    "no-unsafe-optional-chaining": [
      "error",
      {
        disallowArithmeticOperators: false,
      },
    ],
    "no-unused-labels": "error",
    "no-unused-private-class-members": "error",
    "no-useless-catch": "error",
    "no-useless-escape": "error",
    "no-var": "error",
    "no-with": "error",
    "prefer-const": [
      "error",
      {
        destructuring: "any",
        ignoreReadBeforeAssign: false,
      },
    ],
    "prefer-regex-literals": [
      "error",
      {
        disallowRedundantWrapping: false,
      },
    ],
    "prefer-rest-params": "error",
    "prefer-spread": "error",
    "require-yield": "error",
    "use-isnan": [
      "error",
      {
        enforceForIndexOf: false,
        enforceForSwitchCase: true,
      },
    ],
    "valid-typeof": [
      "error",
      {
        requireStringLiterals: false,
      },
    ],
    "@typescript-eslint/ban-ts-comment": "error",
    "@typescript-eslint/no-array-constructor": "error",
    "@typescript-eslint/no-duplicate-enum-values": "error",
    "@typescript-eslint/no-empty-object-type": "error",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-extra-non-null-assertion": "error",
    "@typescript-eslint/no-misused-new": "error",
    "@typescript-eslint/no-namespace": "error",
    "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
    "@typescript-eslint/no-require-imports": "error",
    "@typescript-eslint/no-this-alias": "error",
    "@typescript-eslint/no-unnecessary-type-constraint": "error",
    "@typescript-eslint/no-unsafe-declaration-merging": "error",
    "@typescript-eslint/no-unsafe-function-type": "error",
    "@typescript-eslint/no-unused-expressions": [
      "error",
      {
        allowShortCircuit: false,
        allowTaggedTemplates: false,
        allowTernary: false,
      },
    ],
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/no-wrapper-object-types": "error",
    "@typescript-eslint/prefer-as-const": "error",
    "@typescript-eslint/prefer-namespace-keyword": "error",
    "@typescript-eslint/triple-slash-reference": "error",
    "jsdoc/check-access": "error",
    "jsdoc/check-alignment": "error",
    "jsdoc/check-param-names": "error",
    "jsdoc/check-property-names": "error",
    "jsdoc/check-tag-names": [
      "error",
      {
        typed: true,
      },
    ],
    "jsdoc/check-types": "error",
    "jsdoc/check-values": "error",
    "jsdoc/empty-tags": "error",
    "jsdoc/implements-on-classes": "error",
    "jsdoc/multiline-blocks": "error",
    "jsdoc/no-defaults": "error",
    "jsdoc/no-multi-asterisks": "error",
    "jsdoc/no-types": "error",
    "jsdoc/require-jsdoc": "error",
    "jsdoc/require-param": "error",
    "jsdoc/require-param-description": "error",
    "jsdoc/require-param-name": "error",
    "jsdoc/require-property": "error",
    "jsdoc/require-property-description": "error",
    "jsdoc/require-property-name": "error",
    "jsdoc/require-returns": "error",
    "jsdoc/require-returns-check": "error",
    "jsdoc/require-returns-description": "error",
    "jsdoc/require-yields": "error",
    "jsdoc/require-yields-check": "error",
    "jsdoc/tag-lines": "error",
    "jsdoc/valid-types": "error",
    "regexp/confusing-quantifier": "warn",
    "regexp/control-character-escape": "error",
    "regexp/match-any": "error",
    "regexp/negation": "error",
    "regexp/no-contradiction-with-assertion": "error",
    "regexp/no-dupe-characters-character-class": "error",
    "regexp/no-dupe-disjunctions": "error",
    "regexp/no-empty-alternative": "warn",
    "regexp/no-empty-capturing-group": "error",
    "regexp/no-empty-character-class": "error",
    "regexp/no-empty-group": "error",
    "regexp/no-empty-lookarounds-assertion": "error",
    "regexp/no-empty-string-literal": "error",
    "regexp/no-escape-backspace": "error",
    "regexp/no-extra-lookaround-assertions": "error",
    "regexp/no-invalid-regexp": "error",
    "regexp/no-invisible-character": "error",
    "regexp/no-lazy-ends": "warn",
    "regexp/no-legacy-features": "error",
    "regexp/no-misleading-capturing-group": "error",
    "regexp/no-misleading-unicode-character": "error",
    "regexp/no-missing-g-flag": "error",
    "regexp/no-non-standard-flag": "error",
    "regexp/no-obscure-range": "error",
    "regexp/no-optional-assertion": "error",
    "regexp/no-potentially-useless-backreference": "warn",
    "regexp/no-super-linear-backtracking": "error",
    "regexp/no-trivially-nested-assertion": "error",
    "regexp/no-trivially-nested-quantifier": "error",
    "regexp/no-unused-capturing-group": "error",
    "regexp/no-useless-assertions": "error",
    "regexp/no-useless-backreference": "error",
    "regexp/no-useless-character-class": "error",
    "regexp/no-useless-dollar-replacements": "error",
    "regexp/no-useless-escape": "error",
    "regexp/no-useless-flag": "warn",
    "regexp/no-useless-lazy": "error",
    "regexp/no-useless-non-capturing-group": "error",
    "regexp/no-useless-quantifier": "error",
    "regexp/no-useless-range": "error",
    "regexp/no-useless-set-operand": "error",
    "regexp/no-useless-string-literal": "error",
    "regexp/no-useless-two-nums-quantifier": "error",
    "regexp/no-zero-quantifier": "error",
    "regexp/optimal-lookaround-quantifier": "warn",
    "regexp/optimal-quantifier-concatenation": "error",
    "regexp/prefer-character-class": "error",
    "regexp/prefer-d": "error",
    "regexp/prefer-plus-quantifier": "error",
    "regexp/prefer-predefined-assertion": "error",
    "regexp/prefer-question-quantifier": "error",
    "regexp/prefer-range": "error",
    "regexp/prefer-set-operation": "error",
    "regexp/prefer-star-quantifier": "error",
    "regexp/prefer-unicode-codepoint-escapes": "error",
    "regexp/prefer-w": "error",
    "regexp/simplify-set-operations": "error",
    "regexp/sort-flags": "error",
    "regexp/strict": "error",
    "regexp/use-ignore-case": "error",
  },
  plugins: {
    "@typescript-eslint": require("@typescript-eslint/eslint-plugin"),
    jsdoc: require("eslint-plugin-jsdoc"),
    regexp: require("eslint-plugin-regexp"),
  },
  language: "@/js",
  languageOptions: {
    sourceType: "module",
    ecmaVersion: 2025,
    parser: require("@typescript-eslint/parser"),
    parserOptions: {
      program: null,
      project: false,
      projectService: false,
    },
  },
};
"
`;

exports[`createConfig > enables strict rules 1`] = `
"import { createRequire } from "module";
const require = createRequire(import.meta.url);
export default {
  linterOptions: {
    reportUnusedDisableDirectives: 1,
  },
  rules: {
    "for-direction": "error",
    "no-async-promise-executor": "error",
    "no-case-declarations": "error",
    "no-compare-neg-zero": "error",
    "no-cond-assign": ["error", "except-parens"],
    "no-constant-binary-expression": "error",
    "no-constant-condition": [
      "error",
      {
        checkLoops: "allExceptWhileTrue",
      },
    ],
    "no-control-regex": "error",
    "no-debugger": "error",
    "no-delete-var": "error",
    "no-dupe-else-if": "error",
    "no-duplicate-case": "error",
    "no-empty": [
      "error",
      {
        allowEmptyCatch: false,
      },
    ],
    "no-empty-pattern": [
      "error",
      {
        allowObjectPatternsAsParameters: false,
      },
    ],
    "no-empty-static-block": "error",
    "no-ex-assign": "error",
    "no-extra-boolean-cast": ["error", {}],
    "no-fallthrough": [
      "error",
      {
        allowEmptyCase: false,
        reportUnusedFallthroughComment: false,
      },
    ],
    "no-global-assign": [
      "error",
      {
        exceptions: [],
      },
    ],
    "no-irregular-whitespace": [
      "error",
      {
        skipComments: false,
        skipJSXText: false,
        skipRegExps: false,
        skipStrings: true,
        skipTemplates: false,
      },
    ],
    "no-loss-of-precision": "error",
    "no-misleading-character-class": "error",
    "no-nonoctal-decimal-escape": "error",
    "no-octal": "error",
    "no-prototype-builtins": "error",
    "no-regex-spaces": "error",
    "no-self-assign": [
      "error",
      {
        props: true,
      },
    ],
    "no-shadow-restricted-names": "error",
    "no-sparse-arrays": "error",
    "no-unsafe-finally": "error",
    "no-unsafe-optional-chaining": [
      "error",
      {
        disallowArithmeticOperators: false,
      },
    ],
    "no-unused-labels": "error",
    "no-unused-private-class-members": "error",
    "no-useless-catch": "error",
    "no-useless-escape": "error",
    "no-var": "error",
    "no-with": "error",
    "prefer-const": [
      "error",
      {
        destructuring: "any",
        ignoreReadBeforeAssign: false,
      },
    ],
    "prefer-regex-literals": [
      "error",
      {
        disallowRedundantWrapping: false,
      },
    ],
    "prefer-rest-params": "error",
    "prefer-spread": "error",
    "require-yield": "error",
    "use-isnan": [
      "error",
      {
        enforceForIndexOf: false,
        enforceForSwitchCase: true,
      },
    ],
    "valid-typeof": [
      "error",
      {
        requireStringLiterals: false,
      },
    ],
    "@typescript-eslint/await-thenable": "error",
    "@typescript-eslint/ban-ts-comment": [
      "error",
      {
        minimumDescriptionLength: 10,
      },
    ],
    "@typescript-eslint/no-array-constructor": "error",
    "@typescript-eslint/no-array-delete": "error",
    "@typescript-eslint/no-base-to-string": "error",
    "@typescript-eslint/no-confusing-void-expression": "error",
    "@typescript-eslint/no-deprecated": "error",
    "@typescript-eslint/no-duplicate-enum-values": "error",
    "@typescript-eslint/no-duplicate-type-constituents": "error",
    "@typescript-eslint/no-dynamic-delete": "error",
    "@typescript-eslint/no-empty-object-type": "error",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-extra-non-null-assertion": "error",
    "@typescript-eslint/no-extraneous-class": "error",
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/no-for-in-array": "error",
    "@typescript-eslint/no-implied-eval": "error",
    "@typescript-eslint/no-invalid-void-type": "error",
    "@typescript-eslint/no-meaningless-void-operator": "error",
    "@typescript-eslint/no-misused-new": "error",
    "@typescript-eslint/no-misused-promises": "error",
    "@typescript-eslint/no-misused-spread": "error",
    "@typescript-eslint/no-mixed-enums": "error",
    "@typescript-eslint/no-namespace": "error",
    "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "error",
    "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
    "@typescript-eslint/no-non-null-assertion": "error",
    "@typescript-eslint/no-redundant-type-constituents": "error",
    "@typescript-eslint/no-require-imports": "error",
    "@typescript-eslint/no-this-alias": "error",
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
    "@typescript-eslint/no-unnecessary-condition": "error",
    "@typescript-eslint/no-unnecessary-template-expression": "error",
    "@typescript-eslint/no-unnecessary-type-arguments": "error",
    "@typescript-eslint/no-unnecessary-type-assertion": "error",
    "@typescript-eslint/no-unnecessary-type-constraint": "error",
    "@typescript-eslint/no-unnecessary-type-parameters": "error",
    "@typescript-eslint/no-unsafe-argument": "error",
    "@typescript-eslint/no-unsafe-assignment": "error",
    "@typescript-eslint/no-unsafe-call": "error",
    "@typescript-eslint/no-unsafe-declaration-merging": "error",
    "@typescript-eslint/no-unsafe-enum-comparison": "error",
    "@typescript-eslint/no-unsafe-function-type": "error",
    "@typescript-eslint/no-unsafe-member-access": "error",
    "@typescript-eslint/no-unsafe-return": "error",
    "@typescript-eslint/no-unsafe-unary-minus": "error",
    "@typescript-eslint/no-unused-expressions": [
      "error",
      {
        allowShortCircuit: false,
        allowTaggedTemplates: false,
        allowTernary: false,
      },
    ],
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/no-useless-constructor": "error",
    "@typescript-eslint/no-wrapper-object-types": "error",
    "@typescript-eslint/only-throw-error": "error",
    "@typescript-eslint/prefer-as-const": "error",
    "@typescript-eslint/prefer-literal-enum-member": "error",
    "@typescript-eslint/prefer-namespace-keyword": "error",
    "@typescript-eslint/prefer-promise-reject-errors": "error",
    "@typescript-eslint/prefer-reduce-type-parameter": "error",
    "@typescript-eslint/prefer-return-this-type": "error",
    "@typescript-eslint/related-getter-setter-pairs": "error",
    "@typescript-eslint/require-await": "error",
    "@typescript-eslint/restrict-plus-operands": [
      "error",
      {
        allowAny: false,
        allowBoolean: false,
        allowNullish: false,
        allowNumberAndString: false,
        allowRegExp: false,
      },
    ],
    "@typescript-eslint/restrict-template-expressions": [
      "error",
      {
        allowAny: false,
        allowBoolean: false,
        allowNever: false,
        allowNullish: false,
        allowNumber: false,
        allowRegExp: false,
      },
    ],
    "@typescript-eslint/return-await": [
      "error",
      "error-handling-correctness-only",
    ],
    "@typescript-eslint/triple-slash-reference": "error",
    "@typescript-eslint/unbound-method": "error",
    "@typescript-eslint/unified-signatures": "error",
    "@typescript-eslint/use-unknown-in-catch-callback-variable": "error",
    "jsdoc/check-access": "error",
    "jsdoc/check-alignment": "error",
    "jsdoc/check-param-names": "error",
    "jsdoc/check-property-names": "error",
    "jsdoc/check-tag-names": [
      "error",
      {
        typed: true,
      },
    ],
    "jsdoc/check-types": "error",
    "jsdoc/check-values": "error",
    "jsdoc/empty-tags": "error",
    "jsdoc/implements-on-classes": "error",
    "jsdoc/multiline-blocks": "error",
    "jsdoc/no-defaults": "error",
    "jsdoc/no-multi-asterisks": "error",
    "jsdoc/no-types": "error",
    "jsdoc/require-jsdoc": "error",
    "jsdoc/require-param": "error",
    "jsdoc/require-param-description": "error",
    "jsdoc/require-param-name": "error",
    "jsdoc/require-property": "error",
    "jsdoc/require-property-description": "error",
    "jsdoc/require-property-name": "error",
    "jsdoc/require-returns": "error",
    "jsdoc/require-returns-check": "error",
    "jsdoc/require-returns-description": "error",
    "jsdoc/require-yields": "error",
    "jsdoc/require-yields-check": "error",
    "jsdoc/tag-lines": "error",
    "jsdoc/valid-types": "error",
    "regexp/confusing-quantifier": "warn",
    "regexp/control-character-escape": "error",
    "regexp/match-any": "error",
    "regexp/negation": "error",
    "regexp/no-contradiction-with-assertion": "error",
    "regexp/no-dupe-characters-character-class": "error",
    "regexp/no-dupe-disjunctions": "error",
    "regexp/no-empty-alternative": "warn",
    "regexp/no-empty-capturing-group": "error",
    "regexp/no-empty-character-class": "error",
    "regexp/no-empty-group": "error",
    "regexp/no-empty-lookarounds-assertion": "error",
    "regexp/no-empty-string-literal": "error",
    "regexp/no-escape-backspace": "error",
    "regexp/no-extra-lookaround-assertions": "error",
    "regexp/no-invalid-regexp": "error",
    "regexp/no-invisible-character": "error",
    "regexp/no-lazy-ends": "warn",
    "regexp/no-legacy-features": "error",
    "regexp/no-misleading-capturing-group": "error",
    "regexp/no-misleading-unicode-character": "error",
    "regexp/no-missing-g-flag": "error",
    "regexp/no-non-standard-flag": "error",
    "regexp/no-obscure-range": "error",
    "regexp/no-optional-assertion": "error",
    "regexp/no-potentially-useless-backreference": "warn",
    "regexp/no-super-linear-backtracking": "error",
    "regexp/no-trivially-nested-assertion": "error",
    "regexp/no-trivially-nested-quantifier": "error",
    "regexp/no-unused-capturing-group": "error",
    "regexp/no-useless-assertions": "error",
    "regexp/no-useless-backreference": "error",
    "regexp/no-useless-character-class": "error",
    "regexp/no-useless-dollar-replacements": "error",
    "regexp/no-useless-escape": "error",
    "regexp/no-useless-flag": "warn",
    "regexp/no-useless-lazy": "error",
    "regexp/no-useless-non-capturing-group": "error",
    "regexp/no-useless-quantifier": "error",
    "regexp/no-useless-range": "error",
    "regexp/no-useless-set-operand": "error",
    "regexp/no-useless-string-literal": "error",
    "regexp/no-useless-two-nums-quantifier": "error",
    "regexp/no-zero-quantifier": "error",
    "regexp/optimal-lookaround-quantifier": "warn",
    "regexp/optimal-quantifier-concatenation": "error",
    "regexp/prefer-character-class": "error",
    "regexp/prefer-d": "error",
    "regexp/prefer-plus-quantifier": "error",
    "regexp/prefer-predefined-assertion": "error",
    "regexp/prefer-question-quantifier": "error",
    "regexp/prefer-range": "error",
    "regexp/prefer-set-operation": "error",
    "regexp/prefer-star-quantifier": "error",
    "regexp/prefer-unicode-codepoint-escapes": "error",
    "regexp/prefer-w": "error",
    "regexp/simplify-set-operations": "error",
    "regexp/sort-flags": "error",
    "regexp/strict": "error",
    "regexp/use-ignore-case": "error",
  },
  plugins: {
    "@typescript-eslint": require("@typescript-eslint/eslint-plugin"),
    jsdoc: require("eslint-plugin-jsdoc"),
    regexp: require("eslint-plugin-regexp"),
  },
  language: "@/js",
  languageOptions: {
    sourceType: "module",
    ecmaVersion: 2025,
    parser: require("@typescript-eslint/parser"),
    parserOptions: {
      ecmaVersion: "latest",
      ecmaFeatures: {},
      projectService: true,
    },
  },
};
"
`;

exports[`createConfig > generates a base configuration 1`] = `
"import { createRequire } from "module";
const require = createRequire(import.meta.url);
export default {
  linterOptions: {
    reportUnusedDisableDirectives: 1,
  },
  rules: {
    "for-direction": "error",
    "no-async-promise-executor": "error",
    "no-case-declarations": "error",
    "no-compare-neg-zero": "error",
    "no-cond-assign": ["error", "except-parens"],
    "no-constant-binary-expression": "error",
    "no-constant-condition": [
      "error",
      {
        checkLoops: "allExceptWhileTrue",
      },
    ],
    "no-control-regex": "error",
    "no-debugger": "error",
    "no-delete-var": "error",
    "no-dupe-else-if": "error",
    "no-duplicate-case": "error",
    "no-empty": [
      "error",
      {
        allowEmptyCatch: false,
      },
    ],
    "no-empty-pattern": [
      "error",
      {
        allowObjectPatternsAsParameters: false,
      },
    ],
    "no-empty-static-block": "error",
    "no-ex-assign": "error",
    "no-extra-boolean-cast": ["error", {}],
    "no-fallthrough": [
      "error",
      {
        allowEmptyCase: false,
        reportUnusedFallthroughComment: false,
      },
    ],
    "no-global-assign": [
      "error",
      {
        exceptions: [],
      },
    ],
    "no-irregular-whitespace": [
      "error",
      {
        skipComments: false,
        skipJSXText: false,
        skipRegExps: false,
        skipStrings: true,
        skipTemplates: false,
      },
    ],
    "no-loss-of-precision": "error",
    "no-misleading-character-class": "error",
    "no-nonoctal-decimal-escape": "error",
    "no-octal": "error",
    "no-prototype-builtins": "error",
    "no-regex-spaces": "error",
    "no-self-assign": [
      "error",
      {
        props: true,
      },
    ],
    "no-shadow-restricted-names": "error",
    "no-sparse-arrays": "error",
    "no-unsafe-finally": "error",
    "no-unsafe-optional-chaining": [
      "error",
      {
        disallowArithmeticOperators: false,
      },
    ],
    "no-unused-labels": "error",
    "no-unused-private-class-members": "error",
    "no-useless-catch": "error",
    "no-useless-escape": "error",
    "no-var": "error",
    "no-with": "error",
    "prefer-const": [
      "error",
      {
        destructuring: "any",
        ignoreReadBeforeAssign: false,
      },
    ],
    "prefer-regex-literals": [
      "error",
      {
        disallowRedundantWrapping: false,
      },
    ],
    "prefer-rest-params": "error",
    "prefer-spread": "error",
    "require-yield": "error",
    "use-isnan": [
      "error",
      {
        enforceForIndexOf: false,
        enforceForSwitchCase: true,
      },
    ],
    "valid-typeof": [
      "error",
      {
        requireStringLiterals: false,
      },
    ],
    "@typescript-eslint/await-thenable": "error",
    "@typescript-eslint/ban-ts-comment": "error",
    "@typescript-eslint/no-array-constructor": "error",
    "@typescript-eslint/no-array-delete": "error",
    "@typescript-eslint/no-base-to-string": "error",
    "@typescript-eslint/no-duplicate-enum-values": "error",
    "@typescript-eslint/no-duplicate-type-constituents": "error",
    "@typescript-eslint/no-empty-object-type": "error",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-extra-non-null-assertion": "error",
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/no-for-in-array": "error",
    "@typescript-eslint/no-implied-eval": "error",
    "@typescript-eslint/no-misused-new": "error",
    "@typescript-eslint/no-misused-promises": "error",
    "@typescript-eslint/no-namespace": "error",
    "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
    "@typescript-eslint/no-redundant-type-constituents": "error",
    "@typescript-eslint/no-require-imports": "error",
    "@typescript-eslint/no-this-alias": "error",
    "@typescript-eslint/no-unnecessary-type-assertion": "error",
    "@typescript-eslint/no-unnecessary-type-constraint": "error",
    "@typescript-eslint/no-unsafe-argument": "error",
    "@typescript-eslint/no-unsafe-assignment": "error",
    "@typescript-eslint/no-unsafe-call": "error",
    "@typescript-eslint/no-unsafe-declaration-merging": "error",
    "@typescript-eslint/no-unsafe-enum-comparison": "error",
    "@typescript-eslint/no-unsafe-function-type": "error",
    "@typescript-eslint/no-unsafe-member-access": "error",
    "@typescript-eslint/no-unsafe-return": "error",
    "@typescript-eslint/no-unsafe-unary-minus": "error",
    "@typescript-eslint/no-unused-expressions": [
      "error",
      {
        allowShortCircuit: false,
        allowTaggedTemplates: false,
        allowTernary: false,
      },
    ],
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/no-wrapper-object-types": "error",
    "@typescript-eslint/only-throw-error": "error",
    "@typescript-eslint/prefer-as-const": "error",
    "@typescript-eslint/prefer-namespace-keyword": "error",
    "@typescript-eslint/prefer-promise-reject-errors": "error",
    "@typescript-eslint/require-await": "error",
    "@typescript-eslint/restrict-plus-operands": "error",
    "@typescript-eslint/restrict-template-expressions": "error",
    "@typescript-eslint/triple-slash-reference": "error",
    "@typescript-eslint/unbound-method": "error",
    "jsdoc/check-access": "error",
    "jsdoc/check-alignment": "error",
    "jsdoc/check-param-names": "error",
    "jsdoc/check-property-names": "error",
    "jsdoc/check-tag-names": [
      "error",
      {
        typed: true,
      },
    ],
    "jsdoc/check-types": "error",
    "jsdoc/check-values": "error",
    "jsdoc/empty-tags": "error",
    "jsdoc/implements-on-classes": "error",
    "jsdoc/multiline-blocks": "error",
    "jsdoc/no-defaults": "error",
    "jsdoc/no-multi-asterisks": "error",
    "jsdoc/no-types": "error",
    "jsdoc/require-jsdoc": "error",
    "jsdoc/require-param": "error",
    "jsdoc/require-param-description": "error",
    "jsdoc/require-param-name": "error",
    "jsdoc/require-property": "error",
    "jsdoc/require-property-description": "error",
    "jsdoc/require-property-name": "error",
    "jsdoc/require-returns": "error",
    "jsdoc/require-returns-check": "error",
    "jsdoc/require-returns-description": "error",
    "jsdoc/require-yields": "error",
    "jsdoc/require-yields-check": "error",
    "jsdoc/tag-lines": "error",
    "jsdoc/valid-types": "error",
    "regexp/confusing-quantifier": "warn",
    "regexp/control-character-escape": "error",
    "regexp/match-any": "error",
    "regexp/negation": "error",
    "regexp/no-contradiction-with-assertion": "error",
    "regexp/no-dupe-characters-character-class": "error",
    "regexp/no-dupe-disjunctions": "error",
    "regexp/no-empty-alternative": "warn",
    "regexp/no-empty-capturing-group": "error",
    "regexp/no-empty-character-class": "error",
    "regexp/no-empty-group": "error",
    "regexp/no-empty-lookarounds-assertion": "error",
    "regexp/no-empty-string-literal": "error",
    "regexp/no-escape-backspace": "error",
    "regexp/no-extra-lookaround-assertions": "error",
    "regexp/no-invalid-regexp": "error",
    "regexp/no-invisible-character": "error",
    "regexp/no-lazy-ends": "warn",
    "regexp/no-legacy-features": "error",
    "regexp/no-misleading-capturing-group": "error",
    "regexp/no-misleading-unicode-character": "error",
    "regexp/no-missing-g-flag": "error",
    "regexp/no-non-standard-flag": "error",
    "regexp/no-obscure-range": "error",
    "regexp/no-optional-assertion": "error",
    "regexp/no-potentially-useless-backreference": "warn",
    "regexp/no-super-linear-backtracking": "error",
    "regexp/no-trivially-nested-assertion": "error",
    "regexp/no-trivially-nested-quantifier": "error",
    "regexp/no-unused-capturing-group": "error",
    "regexp/no-useless-assertions": "error",
    "regexp/no-useless-backreference": "error",
    "regexp/no-useless-character-class": "error",
    "regexp/no-useless-dollar-replacements": "error",
    "regexp/no-useless-escape": "error",
    "regexp/no-useless-flag": "warn",
    "regexp/no-useless-lazy": "error",
    "regexp/no-useless-non-capturing-group": "error",
    "regexp/no-useless-quantifier": "error",
    "regexp/no-useless-range": "error",
    "regexp/no-useless-set-operand": "error",
    "regexp/no-useless-string-literal": "error",
    "regexp/no-useless-two-nums-quantifier": "error",
    "regexp/no-zero-quantifier": "error",
    "regexp/optimal-lookaround-quantifier": "warn",
    "regexp/optimal-quantifier-concatenation": "error",
    "regexp/prefer-character-class": "error",
    "regexp/prefer-d": "error",
    "regexp/prefer-plus-quantifier": "error",
    "regexp/prefer-predefined-assertion": "error",
    "regexp/prefer-question-quantifier": "error",
    "regexp/prefer-range": "error",
    "regexp/prefer-set-operation": "error",
    "regexp/prefer-star-quantifier": "error",
    "regexp/prefer-unicode-codepoint-escapes": "error",
    "regexp/prefer-w": "error",
    "regexp/simplify-set-operations": "error",
    "regexp/sort-flags": "error",
    "regexp/strict": "error",
    "regexp/use-ignore-case": "error",
  },
  plugins: {
    "@typescript-eslint": require("@typescript-eslint/eslint-plugin"),
    jsdoc: require("eslint-plugin-jsdoc"),
    regexp: require("eslint-plugin-regexp"),
  },
  language: "@/js",
  languageOptions: {
    sourceType: "module",
    ecmaVersion: 2025,
    parser: require("@typescript-eslint/parser"),
    parserOptions: {
      ecmaVersion: "latest",
      ecmaFeatures: {},
      projectService: true,
    },
  },
};
"
`;

exports[`createConfig > includes Node-specific rules 1`] = `
"import { createRequire } from "module";
const require = createRequire(import.meta.url);
export default {
  linterOptions: {
    reportUnusedDisableDirectives: 1,
  },
  rules: {
    "for-direction": "error",
    "no-async-promise-executor": "error",
    "no-case-declarations": "error",
    "no-compare-neg-zero": "error",
    "no-cond-assign": ["error", "except-parens"],
    "no-constant-binary-expression": "error",
    "no-constant-condition": [
      "error",
      {
        checkLoops: "allExceptWhileTrue",
      },
    ],
    "no-control-regex": "error",
    "no-debugger": "error",
    "no-delete-var": "error",
    "no-dupe-else-if": "error",
    "no-duplicate-case": "error",
    "no-empty": [
      "error",
      {
        allowEmptyCatch: false,
      },
    ],
    "no-empty-pattern": [
      "error",
      {
        allowObjectPatternsAsParameters: false,
      },
    ],
    "no-empty-static-block": "error",
    "no-ex-assign": "error",
    "no-extra-boolean-cast": ["error", {}],
    "no-fallthrough": [
      "error",
      {
        allowEmptyCase: false,
        reportUnusedFallthroughComment: false,
      },
    ],
    "no-global-assign": [
      "error",
      {
        exceptions: [],
      },
    ],
    "no-irregular-whitespace": [
      "error",
      {
        skipComments: false,
        skipJSXText: false,
        skipRegExps: false,
        skipStrings: true,
        skipTemplates: false,
      },
    ],
    "no-loss-of-precision": "error",
    "no-misleading-character-class": "error",
    "no-nonoctal-decimal-escape": "error",
    "no-octal": "error",
    "no-prototype-builtins": "error",
    "no-regex-spaces": "error",
    "no-self-assign": [
      "error",
      {
        props: true,
      },
    ],
    "no-shadow-restricted-names": "error",
    "no-sparse-arrays": "error",
    "no-unsafe-finally": "error",
    "no-unsafe-optional-chaining": [
      "error",
      {
        disallowArithmeticOperators: false,
      },
    ],
    "no-unused-labels": "error",
    "no-unused-private-class-members": "error",
    "no-useless-catch": "error",
    "no-useless-escape": "error",
    "no-var": "error",
    "no-with": "error",
    "prefer-const": [
      "error",
      {
        destructuring: "any",
        ignoreReadBeforeAssign: false,
      },
    ],
    "prefer-regex-literals": [
      "error",
      {
        disallowRedundantWrapping: false,
      },
    ],
    "prefer-rest-params": "error",
    "prefer-spread": "error",
    "require-yield": "error",
    "use-isnan": [
      "error",
      {
        enforceForIndexOf: false,
        enforceForSwitchCase: true,
      },
    ],
    "valid-typeof": [
      "error",
      {
        requireStringLiterals: false,
      },
    ],
    "@typescript-eslint/await-thenable": "error",
    "@typescript-eslint/ban-ts-comment": "error",
    "@typescript-eslint/no-array-constructor": "error",
    "@typescript-eslint/no-array-delete": "error",
    "@typescript-eslint/no-base-to-string": "error",
    "@typescript-eslint/no-duplicate-enum-values": "error",
    "@typescript-eslint/no-duplicate-type-constituents": "error",
    "@typescript-eslint/no-empty-object-type": "error",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-extra-non-null-assertion": "error",
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/no-for-in-array": "error",
    "@typescript-eslint/no-implied-eval": "error",
    "@typescript-eslint/no-misused-new": "error",
    "@typescript-eslint/no-misused-promises": "error",
    "@typescript-eslint/no-namespace": "error",
    "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
    "@typescript-eslint/no-redundant-type-constituents": "error",
    "@typescript-eslint/no-require-imports": "error",
    "@typescript-eslint/no-this-alias": "error",
    "@typescript-eslint/no-unnecessary-type-assertion": "error",
    "@typescript-eslint/no-unnecessary-type-constraint": "error",
    "@typescript-eslint/no-unsafe-argument": "error",
    "@typescript-eslint/no-unsafe-assignment": "error",
    "@typescript-eslint/no-unsafe-call": "error",
    "@typescript-eslint/no-unsafe-declaration-merging": "error",
    "@typescript-eslint/no-unsafe-enum-comparison": "error",
    "@typescript-eslint/no-unsafe-function-type": "error",
    "@typescript-eslint/no-unsafe-member-access": "error",
    "@typescript-eslint/no-unsafe-return": "error",
    "@typescript-eslint/no-unsafe-unary-minus": "error",
    "@typescript-eslint/no-unused-expressions": [
      "error",
      {
        allowShortCircuit: false,
        allowTaggedTemplates: false,
        allowTernary: false,
      },
    ],
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/no-wrapper-object-types": "error",
    "@typescript-eslint/only-throw-error": "error",
    "@typescript-eslint/prefer-as-const": "error",
    "@typescript-eslint/prefer-namespace-keyword": "error",
    "@typescript-eslint/prefer-promise-reject-errors": "error",
    "@typescript-eslint/require-await": "error",
    "@typescript-eslint/restrict-plus-operands": "error",
    "@typescript-eslint/restrict-template-expressions": "error",
    "@typescript-eslint/triple-slash-reference": "error",
    "@typescript-eslint/unbound-method": "error",
    "jsdoc/check-access": "error",
    "jsdoc/check-alignment": "error",
    "jsdoc/check-param-names": "error",
    "jsdoc/check-property-names": "error",
    "jsdoc/check-tag-names": [
      "error",
      {
        typed: true,
      },
    ],
    "jsdoc/check-types": "error",
    "jsdoc/check-values": "error",
    "jsdoc/empty-tags": "error",
    "jsdoc/implements-on-classes": "error",
    "jsdoc/multiline-blocks": "error",
    "jsdoc/no-defaults": "error",
    "jsdoc/no-multi-asterisks": "error",
    "jsdoc/no-types": "error",
    "jsdoc/require-jsdoc": "error",
    "jsdoc/require-param": "error",
    "jsdoc/require-param-description": "error",
    "jsdoc/require-param-name": "error",
    "jsdoc/require-property": "error",
    "jsdoc/require-property-description": "error",
    "jsdoc/require-property-name": "error",
    "jsdoc/require-returns": "error",
    "jsdoc/require-returns-check": "error",
    "jsdoc/require-returns-description": "error",
    "jsdoc/require-yields": "error",
    "jsdoc/require-yields-check": "error",
    "jsdoc/tag-lines": "error",
    "jsdoc/valid-types": "error",
    "n/hashbang": "error",
    "n/no-deprecated-api": "error",
    "n/no-exports-assign": "error",
    "n/no-extraneous-import": "error",
    "n/no-extraneous-require": "error",
    "n/no-missing-import": "error",
    "n/no-missing-require": "error",
    "n/no-process-exit": "error",
    "n/no-unpublished-bin": "error",
    "n/no-unpublished-import": "error",
    "n/no-unpublished-require": "error",
    "n/no-unsupported-features/es-builtins": "error",
    "n/no-unsupported-features/es-syntax": [
      "error",
      {
        ignores: ["modules"],
      },
    ],
    "n/no-unsupported-features/node-builtins": "error",
    "n/process-exit-as-throw": "error",
    "regexp/confusing-quantifier": "warn",
    "regexp/control-character-escape": "error",
    "regexp/match-any": "error",
    "regexp/negation": "error",
    "regexp/no-contradiction-with-assertion": "error",
    "regexp/no-dupe-characters-character-class": "error",
    "regexp/no-dupe-disjunctions": "error",
    "regexp/no-empty-alternative": "warn",
    "regexp/no-empty-capturing-group": "error",
    "regexp/no-empty-character-class": "error",
    "regexp/no-empty-group": "error",
    "regexp/no-empty-lookarounds-assertion": "error",
    "regexp/no-empty-string-literal": "error",
    "regexp/no-escape-backspace": "error",
    "regexp/no-extra-lookaround-assertions": "error",
    "regexp/no-invalid-regexp": "error",
    "regexp/no-invisible-character": "error",
    "regexp/no-lazy-ends": "warn",
    "regexp/no-legacy-features": "error",
    "regexp/no-misleading-capturing-group": "error",
    "regexp/no-misleading-unicode-character": "error",
    "regexp/no-missing-g-flag": "error",
    "regexp/no-non-standard-flag": "error",
    "regexp/no-obscure-range": "error",
    "regexp/no-optional-assertion": "error",
    "regexp/no-potentially-useless-backreference": "warn",
    "regexp/no-super-linear-backtracking": "error",
    "regexp/no-trivially-nested-assertion": "error",
    "regexp/no-trivially-nested-quantifier": "error",
    "regexp/no-unused-capturing-group": "error",
    "regexp/no-useless-assertions": "error",
    "regexp/no-useless-backreference": "error",
    "regexp/no-useless-character-class": "error",
    "regexp/no-useless-dollar-replacements": "error",
    "regexp/no-useless-escape": "error",
    "regexp/no-useless-flag": "warn",
    "regexp/no-useless-lazy": "error",
    "regexp/no-useless-non-capturing-group": "error",
    "regexp/no-useless-quantifier": "error",
    "regexp/no-useless-range": "error",
    "regexp/no-useless-set-operand": "error",
    "regexp/no-useless-string-literal": "error",
    "regexp/no-useless-two-nums-quantifier": "error",
    "regexp/no-zero-quantifier": "error",
    "regexp/optimal-lookaround-quantifier": "warn",
    "regexp/optimal-quantifier-concatenation": "error",
    "regexp/prefer-character-class": "error",
    "regexp/prefer-d": "error",
    "regexp/prefer-plus-quantifier": "error",
    "regexp/prefer-predefined-assertion": "error",
    "regexp/prefer-question-quantifier": "error",
    "regexp/prefer-range": "error",
    "regexp/prefer-set-operation": "error",
    "regexp/prefer-star-quantifier": "error",
    "regexp/prefer-unicode-codepoint-escapes": "error",
    "regexp/prefer-w": "error",
    "regexp/simplify-set-operations": "error",
    "regexp/sort-flags": "error",
    "regexp/strict": "error",
    "regexp/use-ignore-case": "error",
  },
  plugins: {
    "@typescript-eslint": require("@typescript-eslint/eslint-plugin"),
    jsdoc: require("eslint-plugin-jsdoc"),
    regexp: require("eslint-plugin-regexp"),
    n: require("eslint-plugin-n"),
  },
  language: "@/js",
  languageOptions: {
    sourceType: "module",
    ecmaVersion: 2025,
    parser: require("@typescript-eslint/parser"),
    parserOptions: {
      ecmaVersion: "latest",
      ecmaFeatures: {},
      projectService: true,
    },
    globals: {
      __dirname: "off",
      __filename: "off",
      AbortController: false,
      AbortSignal: false,
      atob: false,
      Blob: false,
      BroadcastChannel: false,
      btoa: false,
      Buffer: false,
      ByteLengthQueuingStrategy: false,
      clearImmediate: false,
      clearInterval: false,
      clearTimeout: false,
      CloseEvent: false,
      CompressionStream: false,
      console: false,
      CountQueuingStrategy: false,
      crypto: false,
      Crypto: false,
      CryptoKey: false,
      CustomEvent: false,
      DecompressionStream: false,
      DOMException: false,
      Event: false,
      EventTarget: false,
      exports: "off",
      fetch: false,
      File: false,
      FormData: false,
      global: false,
      Headers: false,
      MessageChannel: false,
      MessageEvent: false,
      MessagePort: false,
      module: "off",
      navigator: false,
      Navigator: false,
      performance: false,
      Performance: false,
      PerformanceEntry: false,
      PerformanceMark: false,
      PerformanceMeasure: false,
      PerformanceObserver: false,
      PerformanceObserverEntryList: false,
      PerformanceResourceTiming: false,
      process: false,
      queueMicrotask: false,
      ReadableByteStreamController: false,
      ReadableStream: false,
      ReadableStreamBYOBReader: false,
      ReadableStreamBYOBRequest: false,
      ReadableStreamDefaultController: false,
      ReadableStreamDefaultReader: false,
      Request: false,
      require: "off",
      Response: false,
      setImmediate: false,
      setInterval: false,
      setTimeout: false,
      structuredClone: false,
      SubtleCrypto: false,
      TextDecoder: false,
      TextDecoderStream: false,
      TextEncoder: false,
      TextEncoderStream: false,
      TransformStream: false,
      TransformStreamDefaultController: false,
      URL: false,
      URLSearchParams: false,
      WebAssembly: false,
      WebSocket: false,
      WritableStream: false,
      WritableStreamDefaultController: false,
      WritableStreamDefaultWriter: false,
      AggregateError: false,
      Array: false,
      ArrayBuffer: false,
      Atomics: false,
      BigInt: false,
      BigInt64Array: false,
      BigUint64Array: false,
      Boolean: false,
      DataView: false,
      Date: false,
      decodeURI: false,
      decodeURIComponent: false,
      encodeURI: false,
      encodeURIComponent: false,
      Error: false,
      escape: false,
      eval: false,
      EvalError: false,
      FinalizationRegistry: false,
      Float32Array: false,
      Float64Array: false,
      Function: false,
      globalThis: false,
      Infinity: false,
      Int16Array: false,
      Int32Array: false,
      Int8Array: false,
      Intl: false,
      isFinite: false,
      isNaN: false,
      JSON: false,
      Map: false,
      Math: false,
      NaN: false,
      Number: false,
      Object: false,
      parseFloat: false,
      parseInt: false,
      Promise: false,
      Proxy: false,
      RangeError: false,
      ReferenceError: false,
      Reflect: false,
      RegExp: false,
      Set: false,
      SharedArrayBuffer: false,
      String: false,
      Symbol: false,
      SyntaxError: false,
      TypeError: false,
      Uint16Array: false,
      Uint32Array: false,
      Uint8Array: false,
      Uint8ClampedArray: false,
      undefined: false,
      unescape: false,
      URIError: false,
      WeakMap: false,
      WeakRef: false,
      WeakSet: false,
    },
  },
};
"
`;

exports[`createConfig > includes React-specific rules 1`] = `
"import { createRequire } from "module";
const require = createRequire(import.meta.url);
export default {
  linterOptions: {
    reportUnusedDisableDirectives: 1,
  },
  rules: {
    "for-direction": "error",
    "no-async-promise-executor": "error",
    "no-case-declarations": "error",
    "no-compare-neg-zero": "error",
    "no-cond-assign": ["error", "except-parens"],
    "no-constant-binary-expression": "error",
    "no-constant-condition": [
      "error",
      {
        checkLoops: "allExceptWhileTrue",
      },
    ],
    "no-control-regex": "error",
    "no-debugger": "error",
    "no-delete-var": "error",
    "no-dupe-else-if": "error",
    "no-duplicate-case": "error",
    "no-empty": [
      "error",
      {
        allowEmptyCatch: false,
      },
    ],
    "no-empty-pattern": [
      "error",
      {
        allowObjectPatternsAsParameters: false,
      },
    ],
    "no-empty-static-block": "error",
    "no-ex-assign": "error",
    "no-extra-boolean-cast": ["error", {}],
    "no-fallthrough": [
      "error",
      {
        allowEmptyCase: false,
        reportUnusedFallthroughComment: false,
      },
    ],
    "no-global-assign": [
      "error",
      {
        exceptions: [],
      },
    ],
    "no-irregular-whitespace": [
      "error",
      {
        skipComments: false,
        skipJSXText: false,
        skipRegExps: false,
        skipStrings: true,
        skipTemplates: false,
      },
    ],
    "no-loss-of-precision": "error",
    "no-misleading-character-class": "error",
    "no-nonoctal-decimal-escape": "error",
    "no-octal": "error",
    "no-prototype-builtins": "error",
    "no-regex-spaces": "error",
    "no-self-assign": [
      "error",
      {
        props: true,
      },
    ],
    "no-shadow-restricted-names": "error",
    "no-sparse-arrays": "error",
    "no-unsafe-finally": "error",
    "no-unsafe-optional-chaining": [
      "error",
      {
        disallowArithmeticOperators: false,
      },
    ],
    "no-unused-labels": "error",
    "no-unused-private-class-members": "error",
    "no-useless-catch": "error",
    "no-useless-escape": "error",
    "no-var": "error",
    "no-with": "error",
    "prefer-const": [
      "error",
      {
        destructuring: "any",
        ignoreReadBeforeAssign: false,
      },
    ],
    "prefer-regex-literals": [
      "error",
      {
        disallowRedundantWrapping: false,
      },
    ],
    "prefer-rest-params": "error",
    "prefer-spread": "error",
    "require-yield": "error",
    "use-isnan": [
      "error",
      {
        enforceForIndexOf: false,
        enforceForSwitchCase: true,
      },
    ],
    "valid-typeof": [
      "error",
      {
        requireStringLiterals: false,
      },
    ],
    "@typescript-eslint/await-thenable": "error",
    "@typescript-eslint/ban-ts-comment": "error",
    "@typescript-eslint/no-array-constructor": "error",
    "@typescript-eslint/no-array-delete": "error",
    "@typescript-eslint/no-base-to-string": "error",
    "@typescript-eslint/no-duplicate-enum-values": "error",
    "@typescript-eslint/no-duplicate-type-constituents": "error",
    "@typescript-eslint/no-empty-object-type": "error",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-extra-non-null-assertion": "error",
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/no-for-in-array": "error",
    "@typescript-eslint/no-implied-eval": "error",
    "@typescript-eslint/no-misused-new": "error",
    "@typescript-eslint/no-misused-promises": "error",
    "@typescript-eslint/no-namespace": "error",
    "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
    "@typescript-eslint/no-redundant-type-constituents": "error",
    "@typescript-eslint/no-require-imports": "error",
    "@typescript-eslint/no-this-alias": "error",
    "@typescript-eslint/no-unnecessary-type-assertion": "error",
    "@typescript-eslint/no-unnecessary-type-constraint": "error",
    "@typescript-eslint/no-unsafe-argument": "error",
    "@typescript-eslint/no-unsafe-assignment": "error",
    "@typescript-eslint/no-unsafe-call": "error",
    "@typescript-eslint/no-unsafe-declaration-merging": "error",
    "@typescript-eslint/no-unsafe-enum-comparison": "error",
    "@typescript-eslint/no-unsafe-function-type": "error",
    "@typescript-eslint/no-unsafe-member-access": "error",
    "@typescript-eslint/no-unsafe-return": "error",
    "@typescript-eslint/no-unsafe-unary-minus": "error",
    "@typescript-eslint/no-unused-expressions": [
      "error",
      {
        allowShortCircuit: false,
        allowTaggedTemplates: false,
        allowTernary: false,
      },
    ],
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/no-wrapper-object-types": "error",
    "@typescript-eslint/only-throw-error": "error",
    "@typescript-eslint/prefer-as-const": "error",
    "@typescript-eslint/prefer-namespace-keyword": "error",
    "@typescript-eslint/prefer-promise-reject-errors": "error",
    "@typescript-eslint/require-await": "error",
    "@typescript-eslint/restrict-plus-operands": "error",
    "@typescript-eslint/restrict-template-expressions": "error",
    "@typescript-eslint/triple-slash-reference": "error",
    "@typescript-eslint/unbound-method": "error",
    "jsdoc/check-access": "error",
    "jsdoc/check-alignment": "error",
    "jsdoc/check-param-names": "error",
    "jsdoc/check-property-names": "error",
    "jsdoc/check-tag-names": [
      "error",
      {
        typed: true,
      },
    ],
    "jsdoc/check-types": "error",
    "jsdoc/check-values": "error",
    "jsdoc/empty-tags": "error",
    "jsdoc/implements-on-classes": "error",
    "jsdoc/multiline-blocks": "error",
    "jsdoc/no-defaults": "error",
    "jsdoc/no-multi-asterisks": "error",
    "jsdoc/no-types": "error",
    "jsdoc/require-jsdoc": "error",
    "jsdoc/require-param": "error",
    "jsdoc/require-param-description": "error",
    "jsdoc/require-param-name": "error",
    "jsdoc/require-property": "error",
    "jsdoc/require-property-description": "error",
    "jsdoc/require-property-name": "error",
    "jsdoc/require-returns": "error",
    "jsdoc/require-returns-check": "error",
    "jsdoc/require-returns-description": "error",
    "jsdoc/require-yields": "error",
    "jsdoc/require-yields-check": "error",
    "jsdoc/tag-lines": "error",
    "jsdoc/valid-types": "error",
    "react-compiler/react-compiler": "error",
    "react-hooks/exhaustive-deps": "error",
    "react-hooks/rules-of-hooks": "error",
    "react/display-name": "error",
    "react/jsx-key": "error",
    "react/jsx-no-comment-textnodes": "error",
    "react/jsx-no-duplicate-props": "error",
    "react/jsx-no-target-blank": "error",
    "react/jsx-no-undef": "error",
    "react/jsx-uses-vars": "error",
    "react/no-children-prop": "error",
    "react/no-danger-with-children": "error",
    "react/no-deprecated": "error",
    "react/no-direct-mutation-state": "error",
    "react/no-find-dom-node": "error",
    "react/no-is-mounted": "error",
    "react/no-render-return-value": "error",
    "react/no-string-refs": "error",
    "react/no-unescaped-entities": "error",
    "react/no-unknown-property": "error",
    "react/prop-types": "error",
    "react/require-render-return": "error",
    "regexp/confusing-quantifier": "warn",
    "regexp/control-character-escape": "error",
    "regexp/match-any": "error",
    "regexp/negation": "error",
    "regexp/no-contradiction-with-assertion": "error",
    "regexp/no-dupe-characters-character-class": "error",
    "regexp/no-dupe-disjunctions": "error",
    "regexp/no-empty-alternative": "warn",
    "regexp/no-empty-capturing-group": "error",
    "regexp/no-empty-character-class": "error",
    "regexp/no-empty-group": "error",
    "regexp/no-empty-lookarounds-assertion": "error",
    "regexp/no-empty-string-literal": "error",
    "regexp/no-escape-backspace": "error",
    "regexp/no-extra-lookaround-assertions": "error",
    "regexp/no-invalid-regexp": "error",
    "regexp/no-invisible-character": "error",
    "regexp/no-lazy-ends": "warn",
    "regexp/no-legacy-features": "error",
    "regexp/no-misleading-capturing-group": "error",
    "regexp/no-misleading-unicode-character": "error",
    "regexp/no-missing-g-flag": "error",
    "regexp/no-non-standard-flag": "error",
    "regexp/no-obscure-range": "error",
    "regexp/no-optional-assertion": "error",
    "regexp/no-potentially-useless-backreference": "warn",
    "regexp/no-super-linear-backtracking": "error",
    "regexp/no-trivially-nested-assertion": "error",
    "regexp/no-trivially-nested-quantifier": "error",
    "regexp/no-unused-capturing-group": "error",
    "regexp/no-useless-assertions": "error",
    "regexp/no-useless-backreference": "error",
    "regexp/no-useless-character-class": "error",
    "regexp/no-useless-dollar-replacements": "error",
    "regexp/no-useless-escape": "error",
    "regexp/no-useless-flag": "warn",
    "regexp/no-useless-lazy": "error",
    "regexp/no-useless-non-capturing-group": "error",
    "regexp/no-useless-quantifier": "error",
    "regexp/no-useless-range": "error",
    "regexp/no-useless-set-operand": "error",
    "regexp/no-useless-string-literal": "error",
    "regexp/no-useless-two-nums-quantifier": "error",
    "regexp/no-zero-quantifier": "error",
    "regexp/optimal-lookaround-quantifier": "warn",
    "regexp/optimal-quantifier-concatenation": "error",
    "regexp/prefer-character-class": "error",
    "regexp/prefer-d": "error",
    "regexp/prefer-plus-quantifier": "error",
    "regexp/prefer-predefined-assertion": "error",
    "regexp/prefer-question-quantifier": "error",
    "regexp/prefer-range": "error",
    "regexp/prefer-set-operation": "error",
    "regexp/prefer-star-quantifier": "error",
    "regexp/prefer-unicode-codepoint-escapes": "error",
    "regexp/prefer-w": "error",
    "regexp/simplify-set-operations": "error",
    "regexp/sort-flags": "error",
    "regexp/strict": "error",
    "regexp/use-ignore-case": "error",
  },
  plugins: {
    "@typescript-eslint": require("@typescript-eslint/eslint-plugin"),
    react: require("eslint-plugin-react"),
    "react-hooks": require("eslint-plugin-react-hooks"),
    "react-compiler": require("eslint-plugin-react-compiler"),
    jsdoc: require("eslint-plugin-jsdoc"),
    regexp: require("eslint-plugin-regexp"),
  },
  language: "@/js",
  languageOptions: {
    sourceType: "module",
    ecmaVersion: 2025,
    parser: require("@typescript-eslint/parser"),
    parserOptions: {
      ecmaFeatures: {
        jsx: true,
      },
      ecmaVersion: "latest",
      projectService: true,
    },
  },
};
"
`;
